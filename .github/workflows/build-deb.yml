name: Build Ghostty Debian package

on:
  # Trigger on newly published releases
  release:
    types: [published]

jobs:
  build-deb:
    name: Build Ghostty .deb for ubuntu ${{ matrix.ubuntu_version }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        ubuntu_version: ["22.04", "24.04"]

    steps:
      # 1) Check out the Ghostty code from ghostty-org/ghostty
      - name: Check out Ghostty source
        uses: actions/checkout@v3
        with:
          repository: ghostty-org/ghostty
          # Use the release tag name that triggered this workflow
          ref: ${{ github.event.release.tag_name }}
          path: ghostty

      # 2) Create Dockerfile (with Zig 0.13.0 + dependencies)
      - name: Create Dockerfile
        run: |
          cat <<EOF > Dockerfile
          FROM ubuntu:${{ matrix.ubuntu_version }}

          ARG ARCH=x86_64
          ARG ZIG_VERSION=0.13.0
          ARG ZIG_DL_URL="https://ziglang.org/download/\${ZIG_VERSION}/zig-linux-\${ARCH}-\${ZIG_VERSION}.tar.xz"

          RUN apt-get update && \
              apt-get install -y --no-install-recommends \
                curl \
                xz-utils \
                git \
                libgtk-4-dev \
                libadwaita-1-dev \
                dpkg-dev \
                ca-certificates && \
              rm -rf /var/lib/apt/lists/*

          # Download & extract Zig
          RUN mkdir -p /opt && \
              curl -L \${ZIG_DL_URL} | tar -xJ -C /opt

          ENV ZIG_HOME=/opt/zig-linux-\${ARCH}-\${ZIG_VERSION}
          ENV PATH="\$ZIG_HOME:\$PATH"

          WORKDIR /workspace
          EOF

      # 3) Build Docker image
      - name: Build Docker image
        run: |
          docker build \
            --build-arg ARCH="x86_64" \
            --build-arg ZIG_VERSION="0.13.0" \
            -t ghostty-builder:latest \
            .

      # 4. Run the container and build Ghostty
      - name: Build Ghostty
        run: |
          docker run --rm \
            -v "${{ github.workspace }}:/workspace" \
            -w /workspace/ghostty \
            ghostty-builder:latest \
            bash -c "
              /opt/zig-linux-x86_64-0.13.0/zig build -p build-${{ matrix.ubuntu_version }} -Doptimize=ReleaseFast
            "

      # 5) Create .deb package
      # 24.04 Depends=libadwaita-1-0 (>= 1.5~beta), libc6 (>= 2.38), libglib2.0-0t64 (>= 2.42.0), libgtk-4-1 (>= 4.3.1), libx11-6
      - name: Create .deb package
        run: |
          VERSION="${{ github.event.release.tag_name }}"
          ARCH="amd64"  # Debian/Ubuntu naming for x86_64
          UBUNTU_VERSION="${{ matrix.ubuntu_version }}"
          PKG_ROOT=pkg/${UBUNTU_VERSION}
          
          mkdir -p ${PKG_ROOT}
          cp -av ghostty/build-${UBUNTU_VERSION} ${PKG_ROOT}/usr

          mkdir -p ${PKG_ROOT}/debian
          cat <<EOF > ${PKG_ROOT}/debian/control
          Package: ghostty
          Version: ${VERSION#v}
          Section: utils
          Priority: optional
          Architecture: ${ARCH}
          Maintainer: Ghostty <contact@ghostty.org>
          Description: Ghostty is a terminal emulator that differentiates itself by being fast, feature-rich, and native. 
          EOF

          dpkg-deb --build ${PKG_ROOT} ghostty-${VERSION}-${UBUNTU_VERSION}-${ARCH}.deb

      # 6) Upload .deb as a release asset
      - name: Upload .deb to GitHub Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          VERSION: ${{ github.event.release.tag_name }}
          ARCH: "amd64"
          UBUNTU_VERSION: "${{ matrix.ubuntu_version }}"
        with:
          # The upload_url for the *current* release is available from the event payload
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ghostty-${{ env.VERSION }}-${{ env.UBUNTU_VERSION }}-${{ env.ARCH }}.deb
          asset_name: ghostty-${{ env.VERSION }}-${{ env.UBUNTU_VERSION }}-${{ env.ARCH }}.deb
          asset_content_type: application/octet-stream
